<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg  style="background-color: white"
 xmlns="http://www.w3.org/2000/svg"
 xmlns:xlink="http://www.w3.org/1999/xlink"
 viewBox="0 0 100 100"  id="box"
 preserveAspectRatio="xMinYMin meet">
 <script type="text/javascript">
 
 <![CDATA[
 
	var _NS="http://www.w3.org/2000/svg";
	var width="100"; // рабочий размер
	var height="100";
	var data_quantity=0;
	var background;
	var colors;
	var shirina;
	var stroke_width;
	var stroke_color;
	var data_designation;
	var signs;
	var round;
	var otstup;
	var space;
	var max;
	var X;
	var X_def;
	var sign_space;
	var zero_line;
	
 function init(params){
 
	var windiw=document.getElementById("box");
	width=params.b_window[0];
	height=params.b_window[1];
	windiw.setAttribute("viewBox","0 0 "+width+" "+height);
	
	round = Math.min(width,height)*params.ramka_angles;
	otstup=Math.min(width,height)*params.ramka_width;
	stroke_color=params.stroke_color;
	signs=params.signs;
	data_quantity=params.signs.length;
	colors=params.colors;
	data_designation=params.data_designation;
	sign_space=params.sign_space;
	
	if(data_designation==3){
		if(sign_space==2) max=height*0.79;
		else max=max=height*0.84;
	}
	else{
		if(sign_space==2) max = height*0.75;
		else max=max=height*0.8;
	}
	if(sign_space==2) zero_line=(height-(0.1*height));
	else zero_line=(height-(0.05*height));
		
	if(sign_space==2) shirina = width*0.9*0.8/data_quantity;
	else shirina = width*0.75*0.8/data_quantity;
	
	space = shirina/4;
	stroke_width=params.stroke_width*shirina;
	
	var signs;
	if(sign_space==2) signs=width - (0.05*width+0.5*space);
	else signs=width - (0.2*width+0.5*space);
	
	var frameColor=this.document.getElementById("linear-gradient");
	var border=document.getElementById("border");
	background = document.getElementById("background_");
	background.setAttribute("fill", params.background_color);
	background.setAttribute("d","M "+otstup+","+(otstup+round)+" A "+round+","+round+" 0,0,1 "+(round+otstup)+","+otstup+" L"+(width-otstup-round)+
			","+otstup+" A "+round+","+round+" 0,0,1 "+(width-otstup)+","+(round+otstup)+" L"+(width-otstup)+","+
			(height-otstup-round)+"A "+round+","+round+" 0,0,1 "+(width-otstup-round)+","+(height-otstup)+"L "+(round+otstup)
			+","+(height-otstup)+"A "+round+","+round+" 0,0,1 "+otstup+","+(height-otstup-round)+"L "+otstup+","+round);
	for (var i=0, length=params.ramka.length;i<length;i++){
		var stop = document.createElementNS(_NS, "stop");
		stop.setAttribute('offset', params.ramka[i].offset);
		stop.setAttribute('stop-color', params.ramka[i].color);
		frameColor.appendChild(stop);
	}	
	border.setAttribute("width",width);
	border.setAttribute("height",height);	
	var temp=this.document.createElementNS(_NS,"tspan");
	var txt=document.getElementById("zagolovok_");
	txt.appendChild(temp);
	var ttext=this.document.createTextNode(params.zagolovok);
	temp.appendChild(ttext);
	temp.setAttribute("text-anchor","middle");
	temp.setAttribute("x",width/2);
	temp.setAttribute("y",height*0.095);
	temp.setAttribute("fill",params.text_color);
	i=0.09;
	temp.setAttribute("font-size",height*i);
	while(temp.getComputedTextLength()>=width-otstup){
		i-=0.005;
		temp.setAttribute("font-size",height*i);
	}
	
	var line=document.getElementById("line_");
	line.setAttribute("d","M "+(0.05*width+0.5*space)+","+zero_line+" L "+signs+","+zero_line);
	line.setAttribute("stroke",stroke_color);
	line.setAttribute("stroke-width",stroke_width);
	
	var bars = document.getElementById("bars_");
	var texts = document.getElementById("texts_");
	X=0.05*width+0.5*space;
	X_def=shirina+space;
	X0=X;
	
	for (var i = 0; i<data_quantity; i++){
		var square = document.createElementNS(_NS, "rect");
		square.setAttribute("id", "bar"+i);
		bars.appendChild(square);
		square.setAttribute("fill",colors[i]);
		square.setAttribute("stroke", stroke_color);
		square.setAttribute("stroke-width",stroke_width);
		square.setAttribute("width", shirina);
		square.setAttribute("x", X0);
		if (sign_space==2) create_text(params.signs[i],X0+shirina/2,height*0.97-otstup,"sign"+i,"middle",shirina);
		
		X0+=X_def;
	}
	
	if(sign_space==1){
		var Y_def=height*0.85/data_quantity;
		var storona=Y_def*0.9;
		var Y0=height*0.1+Y_def*0.1;
		if (storona>0.05*height) {
			storona=0.05*height;
			if(Y_def-storona>0.05*height)Y0=height*0.1+0.05*height;
			else Y0=height*0.1+(Y_def-storona);
		}
		var signs1=document.getElementById("signs_sq");
		for (var G=0;G<data_quantity;G++){
			var square = document.createElementNS(_NS, "rect");
			square.setAttribute("id", "sign"+i);
			square.setAttribute("fill",colors[G]);
			square.setAttribute("stroke", stroke_color);
			square.setAttribute("stroke-width", storona*0.05);
			square.setAttribute("width", storona);
			square.setAttribute("height",  storona);
			square.setAttribute("x", signs+0.01*width);
			square.setAttribute("y", Y0);
			signs1.appendChild(square);
			create_text(params.signs[G],(signs+storona+0.02*width),(Y0+storona*0.95),"text_sign"+i,"start",(width-otstup-(signs+storona+0.02*width)));
			Y0+=Y_def;
		}
	}
 }
 
 function create_text(text,x,y,id,anchor,max){
	var temp=this.document.createElementNS(_NS,"tspan");
	temp.setAttribute("id",id);
	var txt=document.getElementById("txt_");
	txt.appendChild(temp);
	var ttext=this.document.createTextNode(text);
	temp.appendChild(ttext);
	temp.setAttribute("y",y);
	temp.setAttribute("x",x);
	var i=0.06;
	temp.setAttribute("font-size",height*i);
	temp.setAttribute("text-anchor",anchor);
	while(temp.getComputedTextLength()>max){
		i-=0.005;
		temp.setAttribute("font-size",height*i);
	}
	
}
 
 function work(data){
	var i;
	var mas_data=[];
	var loc_max=data["data1"];
	for(i=0;i<data_quantity;i++) {
		mas_data[i]=Math.round(data["data"+(i+1)]*100)/100;
		if(mas_data[i]>loc_max) loc_max=mas_data[i];
	}
	if (data_designation==1){
		var s=0;
		for(i=0;i<data_quantity;i++){
			s+=data["data"+(i+1)];
		}
		for(i=0;i<data_quantity;i++){
			mas_data[i]=Math.round(mas_data[i]/s*10000)/100;
		}
		loc_max=loc_max/s*100;
	}
	for(i=0;i<data_quantity;i++){
		var bar = document.getElementById("bar"+i);
			bar.setAttribute("height",mas_data[i]*max/loc_max);
			bar.setAttribute("y",zero_line-(mas_data[i]*max/loc_max));
	}
	if(data_designation<3){
		var txt=document.getElementById("txt_");
		var X0=X+shirina*0.5;
		for(i=0;i<data_quantity;i++){
			var text = document.getElementById("text"+i);
			if (text!=null) txt.removeChild(text);
			if(data_designation==1) text=mas_data[i]+"%";
			else text=mas_data[i];
			create_text(text,X0,zero_line*0.99-(mas_data[i]*max/loc_max),("text"+i),"middle",shirina)
			X0+=X_def;
		}
	}
 }
 
 ]]>
 </script>  
	<linearGradient id="linear-gradient"> </linearGradient>
	<rect id="border" fill="url(#linear-gradient)"/>
	<path id="background_" stroke="none" />
	<path id="line_" stroke="none" />
	<text id="signs_" text-anchor="middle" font-family="'Calibri Light',normal" > </text>
	<text id="zagolovok_" font-family="'Calibri Light',normal"> </text>
	<g id="bars_"/>
	<g id="signs_sq"/>;
	<text id="txt_" fill="#444444" font-size="1" text-anchor="middle" font-family="'Calibri Light',normal" > </text>
 </svg>	